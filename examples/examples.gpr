with "config/examples_config.gpr";
with "../tiny_rp2040_bsp.gpr";
with "rp2040_hal.gpr";
project Examples is

   for Runtime ("Ada") use "zfp-cortex-m0p";
   for Target use "arm-eabi";

   for Source_Dirs use ("src");
   for Object_Dir use "obj";
   for Create_Missing_Dirs use "True";
   for Exec_Dir use "bin";
   for Main use ("i2c.adb", "leds.adb", "spi_master_16.adb", "uart.adb");

   type Enabled_Kind is ("enabled", "disabled");
   Compile_Checks : Enabled_Kind := External ("EXAMPLES_COMPILE_CHECKS", "disabled");
   Runtime_Checks : Enabled_Kind := External ("EXAMPLES_RUNTIME_CHECKS", "disabled");
   Style_Checks : Enabled_Kind := External ("EXAMPLES_STYLE_CHECKS", "disabled");
   Contracts_Checks : Enabled_Kind := External ("EXAMPLES_CONTRACTS", "disabled");

   type Build_Kind is ("debug", "optimize");
   Build_Mode : Build_Kind := External ("EXAMPLES_BUILD_MODE", "optimize");

   Compile_Checks_Switches := ();
   case Compile_Checks is
      when "enabled" =>
         Compile_Checks_Switches :=
           ("-gnatwa",  -- All warnings
            "-gnatVa",  -- All validity checks
            "-gnatwe"); -- Warnings as errors
      when others => null;
   end case;

   Runtime_Checks_Switches := ();
   case Runtime_Checks is
      when "enabled" => null;
      when others =>
         Runtime_Checks_Switches :=
           ("-gnatp"); -- Suppress checks
   end case;

   Style_Checks_Switches := ();
   case Style_Checks is
      when "enabled" =>
         Style_Checks_Switches :=
           ("-gnatyg",   -- GNAT Style checks
            "-gnaty-d",  -- Disable no DOS line terminators
            "-gnatyM80", -- Maximum line length
            "-gnatyO");  -- Overriding subprograms explicitly marked as such
      when others => null;
   end case;

   Contracts_Switches := ();
   case Contracts_Checks is
      when "enabled" =>
         Contracts_Switches :=
           ("-gnata"); --  Enable assertions and contracts
      when others => null;
   end case;

   Build_Switches := ();
   case Build_Mode is
      when "optimize" =>
         Build_Switches := ("-O3",     -- Optimization
                            "-gnatn"); -- Enable inlining
      when "debug" =>
         Build_Switches := ("-g",   -- Debug info
                            "-Og"); -- No optimization
   end case;

   package Compiler is
      for Default_Switches ("Ada") use
        Compile_Checks_Switches &
        Build_Switches &
        Runtime_Checks_Switches &
        Style_Checks_Switches &
        Contracts_Switches &
        ("-gnatQ",              -- Don't quit. Generate ALI and tree files even if illegalities
         "-fstack-usage",       -- output stack usage information
         "-ffunction-sections", -- Separate ELF section for each function
         "-fdata-sections");    -- Separate ELF section for each variable
      for Local_Configuration_Pragmas use "gnat.adc";
   end Compiler;

   package Binder is
      for Switches ("Ada") use ("-Es"); --  Symbolic traceback
   end Binder;

   package Linker is
      for Default_Switches ("Ada") use
          RP2040_HAL.Linker_Switches;
   end Linker;

end Examples;
